@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.27.0/themes/prism-okaidia.min.css" rel="stylesheet" />
    <style>
        .chat-area {
            height: 400px;
            overflow-y: auto;
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 20px;
        }

        .chat-message {
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 5px;
        }

        .user-message {
            background-color: #f0f0f0;
            text-align: right;
        }

        .bot-message {
            background-color: #e0f7fa;
        }

            .bot-message code {
                display: block;
                padding: 10px;
                overflow-x: auto;
                white-space: pre-wrap;
            }

            .bot-message .highlight-code {
                cursor: pointer;
                color: #007bff;
                text-decoration: underline;
            }

        .query-results-container {
            display: none; /* Initially hidden */
            border: 1px solid #ccc;
            padding: 10px;
            margin-top: 20px;
            max-height: 300px; /* Initial height */
            overflow-y: auto;
            transition: max-height 0.5s ease; /* Smooth transition for height changes */
        }

        .query-results-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid #ccc;
            padding-bottom: 5px;
            margin-bottom: 10px;
        }

        .query-results {
            overflow-x: auto; /* Enable horizontal scrollbar */
            white-space: nowrap; /* Prevent line breaks */
            max-width: 100%; /* Ensure content doesn't exceed container */
        }

        .maximized {
            max-height: 600px; /* Adjust height when maximized */
        }
    </style>
</head>
<body>
    <div class="container-fluid mt-5">
        <div class="row">
            <div class="col-md-6">
                <div class="card h-100">
                    <div class="card-body">
                        <h2 class="card-title">Query Generator</h2>
                        <div id="chatArea" class="chat-area">
                            <div class="chat-bot">
                                <strong>ChatGPT:</strong> Welcome! Start by entering your prompt.
                            </div>
                        </div>
                        <form id="userQueryForm" class="mt-3">
                            <div class="input-group">
                                <input type="text" class="form-control" id="userQuery" placeholder="Enter your prompt..." required>
                                <div class="input-group-append">
                                    <button type="submit" class="btn btn-primary">Send</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card h-100">
                    <div class="card-body">
                        <h2 class="card-title">SQL Query Studio</h2>
                        <form id="executeSqlForm">
                            <div class="form-group">
                                <label for="sqlQuery">SQL Query:</label>
                                <textarea class="form-control" id="sqlQuery" rows="8" required></textarea>
                                <small id="validationMessage">Only SELECT queries are allowed.</small> <!-- Validation message -->
                            </div>
                            <button type="submit" class="btn btn-success btn-block">Execute SQL Query</button>
                        </form>
                        <hr>
                        <div class="query-results-container">
                            <div class="query-results-header">
                                <span>SQL Query Results</span>
                                <button id="toggleResultsBtn" class="btn btn-sm btn-outline-primary float-right">Maximize</button>
                            </div>
                            <div id="queryResults" class="query-results"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.2.0/highlight.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.27.0/prism.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.27.0/themes/prism-okaidia.min.css" rel="stylesheet" />

    <script>
        $(document).ready(function () {
            // Function to add a message to the chat box
            function addMessage(message, isUser = false) {
                const chatBox = $('#chatArea');
                const messageDiv = $('<div class="chat-message">');
                if (isUser) {
                    messageDiv.addClass('user-message').html('<strong>You:</strong> ' + escapeHtml(message));
                } else {
                    messageDiv.addClass('bot-message').html('<strong>ChatGPT:</strong> ' + escapeHtml(message));
                }
                chatBox.append(messageDiv);

                // Optionally scroll to bottom of chat area
                scrollToBottom();
            }

            // Function to handle sending user message
            $('#userQueryForm').submit(function (event) {
                event.preventDefault();
                var userQuery = $('#userQuery').val();
                if (userQuery.trim() === '') return;

                addMessage(userQuery, true); // Add user message to chat UI

                // Simulate delay for API response (replace with actual API call)
                setTimeout(function () {
                    // Mocked response from ChatGPT
                    var botResponse = 'This is a response from the bot. // Example code';
                    addMessage(botResponse); // Add bot response to chat UI

                    // Highlight code in the response (replace 'javascript' with appropriate language)
                    $('#chatArea .bot-message code').each(function (i, block) {
                        hljs.highlightBlock(block);
                    });
                }, 500); // Simulate API delay

                // Clear input field after sending
                $('#userQuery').val('');
            });

            // Function to handle SQL query execution
            $('#executeSqlForm').submit(function (event) {
                event.preventDefault();
                var sqlQuery = $('#sqlQuery').val();
                if (sqlQuery.trim() === '') return;

                // Validate SQL query (allow only SELECT queries)
                if (!isValidSelectQuery(sqlQuery)) {
                    $('#validationMessage').text('Only SELECT queries are allowed.');
                    return;
                }

                // Replace this with actual SQL execution logic
                var executionResult = 'Executed SQL Query:<br><pre><code class="sql">' + escapeHtml(sqlQuery) + '</code></pre>';
                $('#queryResults').html(executionResult);

                // Highlight SQL code
                hljs.highlightBlock($('#queryResults code')[0]);

                // Show results container
                $('.query-results-container').show();
            });

            // Function to validate SQL query (allow only SELECT queries)
            function isValidSelectQuery(query) {
                // Basic validation (you can enhance this as needed)
                var trimmedQuery = query.trim().toLowerCase();
                return trimmedQuery.startsWith('select');
            }

            // Toggle maximize/minimize for query results container
            $('#toggleResultsBtn').click(function () {
                var container = $('.query-results-container');
                container.toggleClass('maximized');
                var isMaximized = container.hasClass('maximized');
                $('#toggleResultsBtn').text(isMaximized ? 'Minimize' : 'Maximize');
            });

            // Function to scroll to bottom of chat area
            function scrollToBottom() {
                $('#chatArea').scrollTop($('#chatArea')[0].scrollHeight);
            }

            // Function to escape HTML characters
            function escapeHtml(text) {
                var map = {
                    '&': '&amp;',
                    '<': '&lt;',
                    '>': '&gt;',
                    '"': '&quot;',
                    "'": '&#039;'
                };
                return text.replace(/[&<>"']/g, function (m) { return map[m]; });
            }
        });
    </script>
</body>
</html>
